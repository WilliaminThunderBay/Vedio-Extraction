 In this section, we'll look at preparing custom data sets for computer vision so you can detect custom objects. One challenge of using a pre-built model is that it will only find images it was trained to find. Though Amazon Recognition was trained with tens of millions of images, it can't detect objects that it wasn't trained on. For example, consider the Eight of Hearts playing card. If you run this card through Amazon Recognition, the results show various attributes. However, none of the labels are playing card or Eight of Hearts. If you want Amazon Recognition to detect images in your problem domain, you must train the model with your images. So in this section, you'll learn how to train Amazon Recognition with images from your problem domain. Though you'll focus only on using Amazon Recognition here, you'll encounter a similar process if you use other pre-trained models. Training a computer vision algorithm to recognize images requires a large input data set, which isn't practical for most organizations. Many machine learning problems today can be solved by training existing models, or you can use a managed service like Amazon Recognition custom labels. Like other machine learning processes, you need to train Amazon Recognition so it recognizes scenes and objects that are in a specific domain. You'll need both a training data set and a test data set that contain labeled images. If you have images that need labels, you can use Amazon Recognition custom labels to simplify your labeling tasks. For example, it provides a UI for labeling images, which includes a feature you can use to draw bounding boxes around images. It can also help find objects and scenes that are unique to your business needs. You can use it to classify images or detect objects within an image. Say you want to identify specific machine parts in images, such as turbochargers or torque converters. You could collect pictures of each kind of machine part and use them to train your model. Amazon Recognition custom labels also includes automated machine learning capabilities that handle the machine learning process for you. When you provide training images, the service can automatically load and inspect the data, select the correct machine learning algorithms, train a model, and provide model performance metrics. When you've finished training your model, you can then evaluate your custom model's performance on your test set. Each image in the test set has a side-by-side comparison of the model's prediction versus the label it assigned. There are also detailed performance metrics for you to review. You can start using your model immediately for image analysis, or you can iterate and retrain new versions with more images to refine the model. After you start using your model, you can track your predictions, correct any mistakes, and use the feedback data to retrain new model versions and improve their performance. So how do you label images? The diagram shows a typical process for training a computer vision model, which includes the Amazon Recognition custom labels feature. We'll step through this in some detail. The process of developing a custom model to analyze images requires time, expertise, and resources. It often takes months to complete. It can also require thousands or tens of thousands of hand-labeled images so the model has enough data to make accurate decisions. It can take months to generate and gather this data. And it can require large teams of labelers to prepare it for use in machine learning. Amazon Recognition custom labels builds on the existing capabilities of Amazon Recognition, which is already trained on tens of millions of images across many categories. Instead of thousands of images, you can upload a small set of training images that are specific to your use case. Typically, you'd use a few hundred images for this. You can use the AWS Management Console to upload training images. If your images are already labeled, Amazon Recognition custom labels can begin training your model. If they're not, you can label the images directly in the labeling interface. Or you can use Amazon SageMaker Ground Truth to label them for you. There'll be more on that shortly. Amazon Recognition custom labels works best when you use different models for different domains. For example, if you need to detect both machine parts and plant health, you'd use two different models. Images you select for training should be similar to the images that will be used for inference. Use images that use various lighting conditions, backgrounds, and resolutions. Ideally, your training images will mirror images you'd want to perform detection on. If you can use the same source, like you'd use in production, that works best. The documentation includes additional guidelines on image type. So whether they are JPEGs or PNGs and other properties, like image size and resolution. That's it for part one of this section. We'll see you again for part two, where we'll review how to create the training dataset.