 Hi, welcome back. We'll continue exploring wrangling time series data. Seasonality in data is any kind of repeating observation, where the frequency of the observation is stable. For example, in sales you typically see higher sales at the end of a quarter and into the fourth quarter. Higher retail sees even higher sales in the fourth quarter. Be aware that data can have multiple types of seasonality in the same data set. There are many times when you should incorporate seasonality information into your forecast. For instance, localized holidays are a good example for sales. The chart shows that the total revenue generated by arcades has a strong correlation with the number of computer science doctorates awarded in the US. But correlations do not mean causation. If you disagree, see the source for the chart. There are many other correlations plotted on the site and none of them make any sense. With your own data, be careful that you're not seeing and acting on correlations that don't have meaning in the real world. Here's an experiment. If you generate two random time series data sets of numbers between 0 and 1, you'll find that they have a very low correlation. But if you introduce the same slope to both data sets, you'll see a very strong correlation. You need to know how stable a system is. The level of stability, or stationarity, can inform how much you should expect the system's past behavior to inform future behavior. A system with low stability won't be successful at predicting the future. You'll often want to determine the trend for a time series. But if you adjust the series for the trend, it can be difficult to compare it with another series that was also adjusted for the trend. This is because the trends might dominate the values in the series. This could then lead to overestimates in correlation between the two series, like we discussed previously. Auto-correlation is one of the special problems you face with time series data. As you've seen in other machine learning problems, the goal of building an ML model is to make sure you're separating the signal from the noise. Auto-correlation is a form of noise because separate observations aren't independent of each other. A time series with auto-correlation might overstate the accuracy of the model that's produced. Some of the algorithms you'll look at in this module can help correct for auto-correlation. These factors, along with seasonality, will influence the model you'll select to produce your forecast. Some algorithms handle seasonality and auto-correlation, but others do not. PENDAS was developed with financial data analysis in mind. As such, it's good at handling time series data. First, you can set the index for your PENDAS data frame to be a date time. You can then use date and time to select your data. You can use ranges that contain partial dates. You can also extract date parts, such as year, month, weekday name, and more. For grouping and resampling tasks, PENDAS has built-in functions to do both. Finally, PENDAS can give you insights into auto-correlation. For more information about PENDAS in the time series, refer to the PENDAS documentation. One of the tasks in building a forecasting application is to choose an appropriate algorithm. Your choice of algorithm should be determined by the type of data set you're using, and the features of that data set. Amazon Forecast supports these five algorithms, but there are others. Each algorithm can handle data with slightly different characteristics. For example, take auto-regressive integrated moving average, which is also known as ARIMA. It removes auto-correlations that can influence the pattern of observations. Or take exponential smoothing, which is also known as ETS. This algorithm is useful for data sets with seasonality. You can find out more about these algorithms in the Amazon Forecast documentation. Some key takeaways from this section of the module include time series data is sequence data that includes a time element which makes it different from regular data sets. Some of the time challenges include dealing with different time formats, handling missing data through down sampling, up sampling, and smoothing. Dealing with seasonality, such as weekdays and yearly cycles, avoiding bad correlations. PENDAS has excellent time series support with functions for dealing with time. There are five algorithms used by Amazon Forecast, ARIMA, DEPAR+, ETS, NPTS, and PROPHET. That's it for this section. We'll see you in the next video.