 Hi, and welcome back. In this section, we're going to look at the types of business problems machine learning can help you solve. Machine learning is used all across your digital lives. Your email spam filter is the result of a machine learning program that was trained with examples of spam and regular email messages. Based on books you're reading or products you bought, machine learning programs can predict other books or products you're likely to be interested in. Again, the machine learning program was trained with data from other readers' habits and purchases. When detecting credit card fraud, the machine learning program was trained on examples of transactions that turned out to be fraud along with normal transactions. You can probably think of many more examples from social media applications using facial detection to group your photos, to detecting brain tumors in brain scans or finding anomalies in x-rays. There are three main types of machine learning. There's supervised learning, where a model uses known inputs and outputs to generalize future outputs. There's unsupervised learning, where the model doesn't know inputs or outputs, so it finds patterns in the data without help. And there's reinforcement learning, where the model interacts with its environment and learns to take actions that will maximize rewards. It's important to know the different types of ML because the type will guide you towards selecting algorithms that make sense for solving your business problem. Let's look more into each of these types. Supervised learning is a popular type of ML because it's widely applicable. It's called supervised learning because there needs to be a supervisor, a teacher who can show the right answers, so to speak. Like any student, a supervised algorithm needs to learn by example. Essentially, it needs a teacher who uses training data to help it determine the patterns and relationships between the inputs and outputs. If you want to build an application to detect credit card fraud, you'd need training data that includes examples of fraud and examples of normal transactions. Within supervised learning, there are different types of problems. Classification and regression. There are two subtypes of classification problems. The first is binary classification. Think back to the example with identifying fraudulent transactions. The target variable in this example is limited to two options, fraudulent or not fraudulent. This is a binary classification problem. There are also multi-class classification problems. These ML problems classify an observation into one of three or more categories. Say that you have an ML model that predicts why a customer is calling your store so you can reduce the number of transfers needed before the customer gets to the correct customer support department. In this case, the different customer support departments represent the variety of potential target variables, which could be many different departments, much more than just two. There are also regression problems. In a regression problem, you're no longer mapping an input to a defined number of categories. Instead, you're mapping an input to a continuous value like an integer. One example of an ML regression problem is predicting the price of a company's stock. Computer vision is a good example of supervised learning. Is this a cat or a dog? Is there a tumor in this X-ray? Computer vision is often built with deep learning models. It automates the extraction, analysis, classification and understanding of useful information from a single image or a sequence of images. Computer vision enables machines to identify people, places and things in images with accuracy at or above human levels and with greater speed and efficiency. The image data can take many forms, such as single images, video sequences, views from multiple cameras or three-dimensional data. You'll learn more about computer vision later in this course. We'll now discuss unsupervised machine learning. Sometimes all you have is the data. There's no supervisor in the room. The unsupervised learning labels aren't provided like they are with supervised learning. You don't know all the variables and patterns. In these instances, the machine has to uncover and create the labels itself. These models use the data they're presented with to detect emerging properties of the entire data set. Then they construct patterns from those properties. Clustering is a common subcategory of unsupervised learning. This kind of algorithm groups data into different clusters based on similar features. It does this to better understand the attributes of a specific cluster. For example, by analyzing customer purchasing habits, unsupervised algorithms can identify groups of customers that are associated with the size tier of a company. The advantage of unsupervised algorithms is that they enable you to see patterns in the data that you weren't aware of before. Professional language processing is also known as NLP. This is another area of machine learning that's experiencing growth. If you've ever used Alexa or any other voice assistant, they'll use NLP to try and answer your question. NLP isn't just about speech. It's also about written text. NLP shows up in many applications. For example, NLP is used with chat or call center bots, which are automated systems that help you get your bank balance or order food from a restaurant. You can use NLP in translation tools, which convert text between languages. For example, you might use applications that translate menus in real time. NLP is also used in voice-to-text translations, which converts spoken words into text. And finally, NLP can be used in sentiment analysis, which you can use to analyze the sentiment of comments and reviews of products, music, and movies. These sentiments could be used to give the movie an audience rating. You'll learn more about NLP later in this course. Another kind of machine learning that's been gaining popularity recently is reinforcement learning. Unlike other machine learning, reinforcement learning continuously improves its model by mining feedback from previous iterations. In reinforcement learning, an agent continuously learns through trial and error as it interacts in an environment. Reinforcement learning is broadly useful when the reward of a desired outcome is known, but the path to achieving it isn't. And that path requires a lot of trial and error to discover. Take the example of AWS DeepRacer. In the AWS DeepRacer simulator, the agent is the virtual car. The environment is a virtual racetrack. The actions are throttling and steering inputs to the car. And the goal is completing the racetrack as quickly as possible without deviating from the track. The car needs to learn the desired driving behavior to reach the goal of completing the track. For the car to learn this, AWS DeepRacer teams use rewards to incentivize their model to learn the desired driving behavior. In reinforcement learning, the thing driving the learning is called the agent. In this case, it's the AWS DeepRacer car. The environment is the place where the agent learns, which in this example would be the marked racetrack. When the agent does something in the environment that provokes a response, such as crossing a boundary it shouldn't cross, that's called an action. That response is called a reward or penalty depending on whether the agent did something to be reinforced or discouraged in the model. As the agent moves within the environment, its actions should start receiving more rewards and fewer penalties until it meets the desired business outcome. Self-driving vehicles bring together many machine and deep learning algorithms and models to solve the problem of driving from point A to point B. Two of its main tasks are the continuous detection of the environment and forecasting changes. These involve detecting objects and localizing and predicting the movement of the detected objects. The outputs of these findings act as inputs to other systems that make decisions on what they should do with the vehicle's various controls. There are use cases in self-driving vehicles that require real-time responses to the environment. For example, if a previously hidden pedestrian walks out from behind an obstacle, the vehicle brakes need to be applied immediately. There can be no latency or room for error with these actions. Not every problem should be solved with machine learning. Sometimes regular programming will work well for your needs. If you're interested in exploring a potential machine learning solution, look for the existence of large data sets and a large number of variables. Machine learning is often the best choice if you're uncertain of the business logic or procedures needed to obtain an answer or accomplish a task. Machine learning systems can be complex. The supporting infrastructure, management support, and technical expertise need to be in place to help ensure the project's success. Here are the key takeaways for this section. Where we explored some machine learning applications that are already part of everyday life. First, machine learning problems can be grouped into three categories. Supervised learning is where you have training data where you already know the answer. Unsupervised learning is where you have data but are looking for insights within the data. Reinforcement learning is where the model learns based on experience and feedback. Most business problems are supervised learning problems. That's it for this section. We'll see you in the next video.